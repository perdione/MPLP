\documentclass[a4paper]{book}
\usepackage{amssymb}
\usepackage[english]{babel}
\usepackage[T1]{fontenc}
\usepackage{fancyhdr}
\usepackage{bm}
\usepackage{pstricks}
\usepackage{qrcode}
\usepackage{subfigure}
\usepackage{graphicx}
\usepackage{lastpage}
\usepackage{booktabs,tabularx,dcolumn}
\usepackage{caption}
\usepackage{xcolor, colortbl}
\usepackage{changepage}
\usepackage{fontspec}
\usepackage{array}
\usepackage{lastpage}
\usepackage{color}  
\usepackage{hyperref}
\usepackage{cleveref}
\hypersetup{
    colorlinks=true, %set true if you want colored links
    linktoc=all,     %set to all if you want both sections and subsections linked
    linkcolor=black,  %choose some color if you want links to stand out
}
\usepackage{rotating}
\usepackage{float}
\usepackage{morefloats}
\usepackage[section]{placeins}

\newcommand{\definesamplelabel}{MPLP Inc.}
\newcommand{\definesamplename}{Industrials}
\newcommand{\definesampleauthor}{MPA}

\pagestyle{fancy}
\fancyhf{}
\rhead{\definesamplelabel{}}
\lhead{\definesamplename{}}
\rfoot{Page \thepage}
\cfoot{v. Foundation}
\lfoot{Analyst: \definesampleauthor}

\extrafloats{300}
\maxdeadcycles=300

\begin{document}

<<Create_PDF,include=FALSE, results='hide'>>=

library(knitr)
opts_chunk$set(concordance=TRUE)
@

<<setup, include=FALSE, cache=FALSE>>=
muffleError <- function(x,options) {}
knit_hooks$set(error=muffleError)
@

<<Libraries_install,warning=FALSE,echo=FALSE, results='hide',include=FALSE>>=
install.packages("devtools")
remotes::install_github("joshuaulrich/quantmod@358-getsymbols-new.session")
install.packages("xts")
install.packages("rvest")
install.packages("tidyverse")
install.packages("stringr")
install.packages("forcats")
install.packages("lubridate")
install.packages("plotly")
install.packages("dplyr")
install.packages("PerformanceAnalytics")
install.packages("FinancialInstrument")
install.packages("foreach")
install.packages("corrplot")
install.packages("webshot")
install.packages("data.table")
@


<<Libraries,warning=FALSE,echo=FALSE, results='hide',include=FALSE>>=
library('knitr')
library('xtable')
library('quantmod')
library('xts')
library('rvest')
library('tidyverse')
library('stringr')
library('forcats')
library('lubridate')
library('plotly')
library('dplyr')
library('PerformanceAnalytics')
library('FinancialInstrument')
library('foreach')
library('corrplot')
library('webshot')
library('data.table')
library('tidyverse')

@




\title{\definesamplelabel{}\\ \definesamplename{}}

\author{MPA}

\maketitle

\thispagestyle{empty}


\begingroup
\tableofcontents
\let\clearpage\relax
\endgroup

\clearpage

\thispagestyle{empty}

\begingroup
\listoffigures
\let\clearpage\relax
\listoftables
\endgroup


\clearpage

\thispagestyle{empty}



\chapter*{Industrials}

\setcounter{chapter}{1}

<<Get Symbols Industrials1, echo=FALSE, results='hide',include=FALSE>>=

listaIndustrials1 <- c("AAL","ALK","ALLE","AME","AOS","BA","CARR","CAT",
"CHRW","CMI","CPRT","CSX","CTAS","DAL","DE","DOV","EFX","ERM","ETN","EXPD",
"FAST","FBHS","FDX","FVT","GD","GE","GNRC","GWW","HII","HON","HWM","IEX","IR",
"ITW","J","JBHT","JCI")

getSymbols(listaIndustrials1,auto.assign = TRUE, from="2015-11-01",to=Sys.Date()+1)

listaIndustrials2 <- c("LDOS","LHX","LMT","LUV","MAS","MMM","NDSN",
"NLSN","NOC","NSC","ODFL","OTIS","PCAR","PH","PNR","PWR","RHI","ROK",
"ROL","ROP","RSG","RTX","SNA","SWK","TDG","TDY",
"TT","TXT","UAL","UNP","UPS","URI","VRSK","WAB","WM","XYL")


getSymbols(listaIndustrials2,auto.assign = TRUE, from="2015-11-01",to=Sys.Date()+1)

@

\section{Industrials TTR Plots}


<<Tutankamon_Industrials1 ,fig.keep='all', warning=FALSE,message=FALSE ,echo=FALSE,fig=TRUE, fig.align='center', results='hide', out.width="1.1\\linewidth", fig.cap=listaIndustrials1>>=

fun_gen_plts = function(x){
 
  chartSeries(get(x),
              name = x,
              TA=' addBBands();
                   addBBands(draw="p");
                   addVo();
                   addMACD();
                   addADX();
                   addATR();
                   addEnvelope();
                   addCCI();
                   addCMO();
                   addDPO();
                   addRSI();
                   addSMI();
                   addWPR();
                   addCMF();
                   addKST();
                   addAroon();
                   addTDI();
                   addMFI();
                   addSAR(accel = c(0.2, 0.2),col=1);
                   addSMA(n = 20, on = 1, with.col = Cl, overlay = TRUE, col = "green");
                   addSMA(n = 50, on = 1, with.col = Cl, overlay = TRUE, col = "blue");
                   addSMA(n = 200, on = 1, with.col = Cl, overlay = TRUE, col = "red");
                   ',subset='last 3 months', theme = "white"
              )
 

}

i=1


for(i in i:length(listaIndustrials1)){
 
fun_gen_plts(listaIndustrials1[i])
 
i=i+1
 
}

@


<<Tutankamon_Industrials2 ,fig.keep='all', warning=FALSE,message=FALSE ,echo=FALSE,fig=TRUE, fig.align='center', results='hide', out.width="1.1\\linewidth", fig.cap=listaIndustrials2>>=

fun_gen_plts = function(x){
 
  chartSeries(get(x),
              name = x,
              TA=' addBBands();
                   addBBands(draw="p");
                   addVo();
                   addMACD();
                   addADX();
                   addATR();
                   addEnvelope();
                   addCCI();
                   addCMO();
                   addDPO();
                   addRSI();
                   addSMI();
                   addWPR();
                   addCMF();
                   addKST();
                   addAroon();
                   addTDI();
                   addMFI();
                   addSAR(accel = c(0.2, 0.2),col=1);
                   addSMA(n = 20, on = 1, with.col = Cl, overlay = TRUE, col = "green");
                   addSMA(n = 50, on = 1, with.col = Cl, overlay = TRUE, col = "blue");
                   addSMA(n = 200, on = 1, with.col = Cl, overlay = TRUE, col = "red");
                   ',subset='last 3 months', theme = "white"
              )
 

}

i=1


for(i in i:length(listaIndustrials2)){
 
fun_gen_plts(listaIndustrials2[i])
 
i=i+1
 
}

@

<<parameters Industrials1, echo=FALSE, results='hide',include=FALSE>>=


fun_gen_sim_Industrials1 = function(x){
 
  i=1
 
  testIndustrials1 <- as.xts()
 
  finalIndustrials1 <- as.xts()
 
  for (i in i:length(listaIndustrials1)) {
   
    testIndustrials1[[i]] <- getSymbols(listaSPIndustrials1[i],auto.assign = FALSE, from="2015-11-01",to=Sys.Date()+1,return.class="xts")
   
  finalIndustrials1 <- append(finalIndustrials1[[i]],testIndustrials1[[i]])
   
  }
 
  return(finalIndustrials1)
 
}


fun_gen_tab_Industrials1 = function(y){
 
 y <- list()
 Openy <- list()
 Closey <- list()
 Diffy <- list()
 CltoCly <- list()
 ClosePrevy <- list()
 Weeky <- list()
 Monthy <- list()
 Yeary <- list()
 Fivey <- list()

for(i in 1:length(listaIndustrials1)){
 
y[[i]] <- getSymbols(listaIndustrials1[i],auto.assign = FALSE,from="2015-11-01",to=Sys.Date()+1 ,return.class="xts")


y[[i]] <- na.locf(y[[i]], xout=seq(head(index(y[[i]]),1),tail(index(y[[i]]),1),by="1 day"))
Openy[[i]] <- as.numeric(y[[i]][end(y[[i]]),1])
Closey[[i]] <- as.numeric(y[[i]][end(y[[i]]),4])
Diffy[[i]] <- (Closey[[i]]-Openy[[i]])*100/Openy[[i]]

ClosePrevy[[i]] <- as.numeric(y[[i]][end(y[[i]])-1,4])

CltoCly[[i]] <- (Closey[[i]]-ClosePrevy[[i]])*100/ClosePrevy[[i]]

Weeky[[i]] <- (as.numeric(y[[i]][end(y[[i]]),4])-as.numeric(y[[i]][end(y[[i]])-7,1])) *100 / as.numeric(y[[i]][end(y[[i]])-7,1])


Monthy[[i]] <- (as.numeric(y[[i]][end(y[[i]]),4])-as.numeric(y[[i]][end(y[[i]])-30,4])) *100 / as.numeric(y[[i]][end(y[[i]])-30,4])



Yeary[[i]] <-(as.numeric(y[[i]][end(y[[i]]),4])-as.numeric(y[[i]]["2021-01-01",4])) *100 / as.numeric(y[[i]]["2021-01-01",4])

if(length(Yeary[[i]])==0){Yeary[[i]]= NA} else {format(round(Yeary[[i]],digits = 2),nsmall=2)}


Fivey[[i]] <- (as.numeric(y[[i]][end(y[[i]]),4])-as.numeric(y[[i]][end(y[[i]])-1825,4])) *100 / as.numeric(y[[i]][end(y[[i]])-1825,4])

if(length(Fivey[[i]])==0){Fivey[[i]]= NA} else {format(round(Fivey[[i]],digits = 2),nsmall=2)}



}
 
ResTab <- data.frame()
 
ResTab <- rbind(Diffy,CltoCly,Weeky,Monthy,Yeary,Fivey)
 

colnames(ResTab) <- listaIndustrials1


ResTab_transpose <- as.data.frame(t(as.matrix(ResTab)))

format.data.frame(ResTab_transpose, digits =2)

 
return(as.data.frame(ResTab_transpose))
 
}



fun_gen_sim_Industrials1 = function(x){
 
  i=1
 
  testIndustrials1 <- as.xts()
 
  finalIndustrials1 <- as.xts()
 
  for (i in i:length(listaIndustrials1)) {
   
    testIndustrials1[[i]] <- getSymbols(listaIndustrials1[i],auto.assign = FALSE, from="2015-11-01",to=Sys.Date()+1,return.class="xts")
   
  finalIndustrials1 <- append(finalIndustrials1[[i]],testIndustrials1[[i]])
   
  }
 
  return(finalIndustrials1)
 
}

@


<<parameters Industrials2, echo=FALSE, results='hide',include=FALSE>>=


fun_gen_sim_Industrials2 = function(x){
 
  i=1
 
  testIndustrials2 <- as.xts()
 
  finalIndustrials2 <- as.xts()
 
  for (i in i:length(listaIndustrials2)) {
   
    testIndustrials2[[i]] <- getSymbols(listaSPIndustrials2[i],auto.assign = FALSE, from="2015-11-01",to=Sys.Date()+1,return.class="xts")
   
  finalIndustrials2 <- append(finalIndustrials2[[i]],testIndustrials2[[i]])
   
  }
 
  return(finalIndustrials2)
 
}


fun_gen_tab_Industrials2 = function(y){
 
 y <- list()
 Openy <- list()
 Closey <- list()
 Diffy <- list()
 CltoCly <- list()
 ClosePrevy <- list()
 Weeky <- list()
 Monthy <- list()
 Yeary <- list()
 Fivey <- list()

for(i in 1:length(listaIndustrials2)){
 
y[[i]] <- getSymbols(listaIndustrials2[i],auto.assign = FALSE,from="2015-11-01",to=Sys.Date()+1 ,return.class="xts")


y[[i]] <- na.locf(y[[i]], xout=seq(head(index(y[[i]]),1),tail(index(y[[i]]),1),by="1 day"))
Openy[[i]] <- as.numeric(y[[i]][end(y[[i]]),1])
Closey[[i]] <- as.numeric(y[[i]][end(y[[i]]),4])
Diffy[[i]] <- (Closey[[i]]-Openy[[i]])*100/Openy[[i]]

ClosePrevy[[i]] <- as.numeric(y[[i]][end(y[[i]])-1,4])

CltoCly[[i]] <- (Closey[[i]]-ClosePrevy[[i]])*100/ClosePrevy[[i]]

Weeky[[i]] <- (as.numeric(y[[i]][end(y[[i]]),4])-as.numeric(y[[i]][end(y[[i]])-7,1])) *100 / as.numeric(y[[i]][end(y[[i]])-7,1])


Monthy[[i]] <- (as.numeric(y[[i]][end(y[[i]]),4])-as.numeric(y[[i]][end(y[[i]])-30,4])) *100 / as.numeric(y[[i]][end(y[[i]])-30,4])



Yeary[[i]] <-(as.numeric(y[[i]][end(y[[i]]),4])-as.numeric(y[[i]]["2021-01-01",4])) *100 / as.numeric(y[[i]]["2021-01-01",4])

if(length(Yeary[[i]])==0){Yeary[[i]]= NA} else {format(round(Yeary[[i]],digits = 2),nsmall=2)}


Fivey[[i]] <- (as.numeric(y[[i]][end(y[[i]]),4])-as.numeric(y[[i]][end(y[[i]])-1825,4])) *100 / as.numeric(y[[i]][end(y[[i]])-1825,4])

if(length(Fivey[[i]])==0){Fivey[[i]]= NA} else {format(round(Fivey[[i]],digits = 2),nsmall=2)}



}
 
ResTab <- data.frame()
 
ResTab <- rbind(Diffy,CltoCly,Weeky,Monthy,Yeary,Fivey)
 

colnames(ResTab) <- listaIndustrials2


ResTab_transpose <- as.data.frame(t(as.matrix(ResTab)))

format.data.frame(ResTab_transpose, digits =2)

 
return(as.data.frame(ResTab_transpose))
 
}



fun_gen_sim_Industrials2 = function(x){
 
  i=1
 
  testIndustrials2 <- as.xts()
 
  finalIndustrials2 <- as.xts()
 
  for (i in i:length(listaIndustrials2)) {
   
    testIndustrials2[[i]] <- getSymbols(listaIndustrials2[i],auto.assign = FALSE, from="2015-11-01",to=Sys.Date()+1,return.class="xts")
   
  finalIndustrials2 <- append(finalIndustrials2[[i]],testIndustrials2[[i]])
   
  }
 
  return(finalIndustrials2)
 
}

@



\subsection{Variation for Industrials}

<<Table_Variance_y_Industrials1 , echo=FALSE, results = "asis" >>=

table.Industrials1 <- fun_gen_tab_Industrials1(listaIndustrials1)
 
 

colnames(table.Industrials1) <- c("Day","CloseToClose", "Week","Month","Year","5 Years")
rownames(table.Industrials1) <- listaIndustrials1

tex.tableIndustrials1 <- xtable(table.Industrials1)
caption(tex.tableIndustrials1) <- sprintf("Variance for Industrials1")
print(tex.tableIndustrials1,
      sep='\n' )

@


<<parameters z1 Industrials1, echo=FALSE, results='hide',include=FALSE>>=


fun_gen_fun_Industrials1 = function(){


FundAnalysis_z  <- c()
MarketCap    <- c()
EarningsShare <- c()
PERatio      <- c()
BookValue    <- c()
DividendYield <- c()
DividendPayDate <- c()
EarningsTimeStamp <- c()
PriceEPSEstimate <- c()
EarningsStartTime <- c()
EPSForwaerd        <- c()
EarningsEndTime  <- c()
PriceBook        <- c()
ExDividendDate   <- c()
ChangeMA50       <- c()
ChangeMA200       <- c()


i=1

for (i in i:length(listaIndustrials1)){
 
FundAnalysis_z[[i]] <- getQuote(listaIndustrials1[i], what = yahooQF(c("Market Capitalization","Earnings/Share","P/E Ratio","Book Value","Dividend Yield","Dividend Pay Date","Earnings Timestamp","Price/EPS Estimate Next Year", "Earnings Start Time","EPS Forward","Earnings End Time","Price/Book","Ex-Dividend Date","Change From 50-day Moving Average","Change From 200-day Moving Average")))

MarketCap[[i]] <- FundAnalysis_z[[i]]$`Market Capitalization`
EarningsShare[[i]] <- FundAnalysis_z[[i]]$`Earnings/Share`
PERatio[[i]]       <- FundAnalysis_z[[i]]$`P/E Ratio`
BookValue[[i]]     <- FundAnalysis_z[[i]]$`Book Value`
DividendYield[[i]] <- FundAnalysis_z[[i]]$`Dividend Yield`
DividendPayDate[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Dividend Pay Date`, origin = "1970-01-01")
EarningsTimeStamp[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Earnings Timestamp`, origin = "1970-01-01")
PriceEPSEstimate[[i]] <- FundAnalysis_z[[i]]$`Price/EPS Estimate Next Year`
EarningsStartTime[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Earnings Start Time`, origin = "1970-01-01")
EPSForwaerd[[i]] <- FundAnalysis_z[[i]]$`EPS Forward`
EarningsEndTime[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Earnings End Time`,origin = "1970-01-01")
PriceBook[[i]] <- FundAnalysis_z[[i]]$`Price/Book`
ExDividendDate[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Ex-Dividend Date`, origin = "1970-01-01")
ChangeMA50[[i]] <- FundAnalysis_z[[i]]$`Change From 50-day MA`
ChangeMA200[[i]] <- FundAnalysis_z[[i]]$`Change From 200-day MA`}

ResFunAn <- data.frame()

ResFunAn <- rbind(MarketCap,
                  EarningsShare,
                  PERatio,
                  BookValue,
                  DividendYield,
                  DividendPayDate,
                  EarningsTimeStamp,
                  PriceEPSEstimate,
                  EarningsStartTime,
                  EPSForwaerd,
                  EarningsEndTime,
                  PriceBook,
                  ExDividendDate,
                  ChangeMA50,
                  ChangeMA200)

return(ResFunAn)

}

<<Table_Variance_y_Industrials2 , echo=FALSE, results = "asis" >>=

table.Industrials2 <- fun_gen_tab_Industrials2(listaIndustrials2)
 
 

colnames(table.Industrials2) <- c("Day","CloseToClose", "Week","Month","Year","5 Years")
rownames(table.Industrials2) <- listaIndustrials2

tex.tableIndustrials2 <- xtable(table.Industrials2)
caption(tex.tableIndustrials2) <- sprintf("Variance for Industrials2")
print(tex.tableIndustrials2,
      sep='\n' )

@


<<parameters z1 Industrials2, echo=FALSE, results='hide',include=FALSE>>=


fun_gen_fun_Industrials2 = function(){


FundAnalysis_z  <- c()
MarketCap    <- c()
EarningsShare <- c()
PERatio      <- c()
BookValue    <- c()
DividendYield <- c()
DividendPayDate <- c()
EarningsTimeStamp <- c()
PriceEPSEstimate <- c()
EarningsStartTime <- c()
EPSForwaerd        <- c()
EarningsEndTime  <- c()
PriceBook        <- c()
ExDividendDate   <- c()
ChangeMA50       <- c()
ChangeMA200       <- c()


i=1

for (i in i:length(listaIndustrials2)){
 
FundAnalysis_z[[i]] <- getQuote(listaIndustrials2[i], what = yahooQF(c("Market Capitalization","Earnings/Share","P/E Ratio","Book Value","Dividend Yield","Dividend Pay Date","Earnings Timestamp","Price/EPS Estimate Next Year", "Earnings Start Time","EPS Forward","Earnings End Time","Price/Book","Ex-Dividend Date","Change From 50-day Moving Average","Change From 200-day Moving Average")))

MarketCap[[i]] <- FundAnalysis_z[[i]]$`Market Capitalization`
EarningsShare[[i]] <- FundAnalysis_z[[i]]$`Earnings/Share`
PERatio[[i]]       <- FundAnalysis_z[[i]]$`P/E Ratio`
BookValue[[i]]     <- FundAnalysis_z[[i]]$`Book Value`
DividendYield[[i]] <- FundAnalysis_z[[i]]$`Dividend Yield`
DividendPayDate[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Dividend Pay Date`, origin = "1970-01-01")
EarningsTimeStamp[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Earnings Timestamp`, origin = "1970-01-01")
PriceEPSEstimate[[i]] <- FundAnalysis_z[[i]]$`Price/EPS Estimate Next Year`
EarningsStartTime[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Earnings Start Time`, origin = "1970-01-01")
EPSForwaerd[[i]] <- FundAnalysis_z[[i]]$`EPS Forward`
EarningsEndTime[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Earnings End Time`,origin = "1970-01-01")
PriceBook[[i]] <- FundAnalysis_z[[i]]$`Price/Book`
ExDividendDate[[i]] <- as.POSIXct(FundAnalysis_z[[i]]$`Ex-Dividend Date`, origin = "1970-01-01")
ChangeMA50[[i]] <- FundAnalysis_z[[i]]$`Change From 50-day MA`
ChangeMA200[[i]] <- FundAnalysis_z[[i]]$`Change From 200-day MA`}

ResFunAn <- data.frame()

ResFunAn <- rbind(MarketCap,
                  EarningsShare,
                  PERatio,
                  BookValue,
                  DividendYield,
                  DividendPayDate,
                  EarningsTimeStamp,
                  PriceEPSEstimate,
                  EarningsStartTime,
                  EPSForwaerd,
                  EarningsEndTime,
                  PriceBook,
                  ExDividendDate,
                  ChangeMA50,
                  ChangeMA200)

return(ResFunAn)

}


@


\newpage


\section{Fundamental Analysis Tables Industrials}

<<Table_Final_Fundamental_analysis_Industrials1 , echo=FALSE, results = "asis" >>=


Par_fund_an_Industrials1 <- as.data.frame(fun_gen_fun_Industrials1())

setnames(Par_fund_an_Industrials1, listaIndustrials1)

Fund_An_Tab_Res_Industrials1 <- as.data.frame(matrix("", ncol = 1, nrow = 15))



i=1

for (i in i:length(listaIndustrials1)) {


Fund_An_Tab_Res_Industrials1 <- Par_fund_an_Industrials1[listaIndustrials1[i]]



New_Fund_An_Tab_Res1Industrials1 <- Par_fund_an_Industrials1[[1,i]]

New_Fund_An_Tab_Res2Industrials1 <- Par_fund_an_Industrials1[[2,i]]

New_Fund_An_Tab_Res3Industrials1 <-  Par_fund_an_Industrials1[[3,i]]

New_Fund_An_Tab_Res4Industrials1 <-  Par_fund_an_Industrials1[[4,i]]

New_Fund_An_Tab_Res5Industrials1 <-  Par_fund_an_Industrials1[[5,i]]

New_Fund_An_Tab_Res6Industrials1 <- Par_fund_an_Industrials1[[6,i]]

New_Fund_An_Tab_Res7Industrials1 <- Par_fund_an_Industrials1[[7,i]]

New_Fund_An_Tab_Res8Industrials1 <- Par_fund_an_Industrials1[[8,i]]

New_Fund_An_Tab_Res9Industrials1 <- Par_fund_an_Industrials1[[9,i]]

New_Fund_An_Tab_Res10Industrials1 <-  Par_fund_an_Industrials1[[10,i]]

New_Fund_An_Tab_Res11Industrials1 <- Par_fund_an_Industrials1[[11,i]]

New_Fund_An_Tab_Res12Industrials1 <- Par_fund_an_Industrials1[[12,i]]

New_Fund_An_Tab_Res13Industrials1 <- Par_fund_an_Industrials1[[13,i]]

New_Fund_An_Tab_Res14Industrials1 <-  Par_fund_an_Industrials1[[14,i]]

New_Fund_An_Tab_Res15Industrials1 <- Par_fund_an_Industrials1[[15,i]]


table.FundAnalysisDMY_Industrials1 <- matrix("", ncol = 2, nrow = 15)

colnames(table.FundAnalysisDMY_Industrials1) <- c("Parameter", "Value")

table.FundAnalysisDMY_Industrials1[1,1] <- "Market Capitalization"
table.FundAnalysisDMY_Industrials1[1,2] <- sprintf("%.8g",New_Fund_An_Tab_Res1Industrials1)


table.FundAnalysisDMY_Industrials1[2,1] <- "P/E Ratio"
table.FundAnalysisDMY_Industrials1[2,2] <- sprintf("%.2f",New_Fund_An_Tab_Res3Industrials1)


table.FundAnalysisDMY_Industrials1[3,1] <- "Earnings / Share"
table.FundAnalysisDMY_Industrials1[3,2] <- sprintf("%.2f",New_Fund_An_Tab_Res2Industrials1)


table.FundAnalysisDMY_Industrials1[4,1] <- "Price / Book"
table.FundAnalysisDMY_Industrials1[4,2] <- sprintf("%.2f",New_Fund_An_Tab_Res12Industrials1)


table.FundAnalysisDMY_Industrials1[5,1] <- "Book Value"
table.FundAnalysisDMY_Industrials1[5,2] <- sprintf("%.2f",New_Fund_An_Tab_Res4Industrials1)


table.FundAnalysisDMY_Industrials1[6,1] <- "EPS Forward"
table.FundAnalysisDMY_Industrials1[6,2] <- sprintf("%.2f",New_Fund_An_Tab_Res10Industrials1)


table.FundAnalysisDMY_Industrials1[7,1] <- "Price EPS Estimate Next Year"
table.FundAnalysisDMY_Industrials1[7,2] <- sprintf("%.2f",New_Fund_An_Tab_Res8Industrials1)


table.FundAnalysisDMY_Industrials1[8,1] <- "Dividend Yield"
table.FundAnalysisDMY_Industrials1[8,2] <- sprintf("%.6f",New_Fund_An_Tab_Res5Industrials1)


table.FundAnalysisDMY_Industrials1[9,1] <- "Dividend Pay Date"
table.FundAnalysisDMY_Industrials1[9,2] <- sprintf("%s",New_Fund_An_Tab_Res6Industrials1)

table.FundAnalysisDMY_Industrials1[10,1] <- "Dividend Ex-Date"
table.FundAnalysisDMY_Industrials1[10,2] <- sprintf("%s",New_Fund_An_Tab_Res13Industrials1)


table.FundAnalysisDMY_Industrials1[11,1] <- "Earnings Time Stamp"
table.FundAnalysisDMY_Industrials1[11,2] <- sprintf("%s",New_Fund_An_Tab_Res7Industrials1)

table.FundAnalysisDMY_Industrials1[12,1] <- "Earnings Start Time"
table.FundAnalysisDMY_Industrials1[12,2] <- sprintf("%s",New_Fund_An_Tab_Res9Industrials1)

table.FundAnalysisDMY_Industrials1[13,1] <- "Earnings End Time"
table.FundAnalysisDMY_Industrials1[13,2] <- sprintf("%s",New_Fund_An_Tab_Res11Industrials1)

table.FundAnalysisDMY_Industrials1[14,1] <- "Change From 50-day Moving Average"
table.FundAnalysisDMY_Industrials1[14,2] <- sprintf("%.2f",New_Fund_An_Tab_Res14Industrials1)

table.FundAnalysisDMY_Industrials1[15,1] <- "Change From 200-day Moving Average"
table.FundAnalysisDMY_Industrials1[15,2] <- sprintf("%.2f",New_Fund_An_Tab_Res15Industrials1)


tex.table.FundAnalysisDMY_Industrials1 <- xtable(table.FundAnalysisDMY_Industrials1)
caption(tex.table.FundAnalysisDMY_Industrials1) <- sprintf("Fundamental Analysis parameters for %s", listaIndustrials1[i])
print(tex.table.FundAnalysisDMY_Industrials1,
      include.rownames = FALSE,
      caption.placement = "top",
      table.placement = "ht")


}



@

<<Table_Final_Fundamental_analysis_Industrials2 , echo=FALSE, results = "asis" >>=


Par_fund_an_Industrials2 <- as.data.frame(fun_gen_fun_Industrials2())

setnames(Par_fund_an_Industrials2, listaIndustrials2)

Fund_An_Tab_Res_Industrials2 <- as.data.frame(matrix("", ncol = 1, nrow = 15))



i=1

for (i in i:length(listaIndustrials2)) {


Fund_An_Tab_Res_Industrials2 <- Par_fund_an_Industrials2[listaIndustrials2[i]]



New_Fund_An_Tab_Res1Industrials2 <- Par_fund_an_Industrials2[[1,i]]

New_Fund_An_Tab_Res2Industrials2 <- Par_fund_an_Industrials2[[2,i]]

New_Fund_An_Tab_Res3Industrials2 <-  Par_fund_an_Industrials2[[3,i]]

New_Fund_An_Tab_Res4Industrials2 <-  Par_fund_an_Industrials2[[4,i]]

New_Fund_An_Tab_Res5Industrials2 <-  Par_fund_an_Industrials2[[5,i]]

New_Fund_An_Tab_Res6Industrials2 <- Par_fund_an_Industrials2[[6,i]]

New_Fund_An_Tab_Res7Industrials2 <- Par_fund_an_Industrials2[[7,i]]

New_Fund_An_Tab_Res8Industrials2 <- Par_fund_an_Industrials2[[8,i]]

New_Fund_An_Tab_Res9Industrials2 <- Par_fund_an_Industrials2[[9,i]]

New_Fund_An_Tab_Res10Industrials2 <-  Par_fund_an_Industrials2[[10,i]]

New_Fund_An_Tab_Res11Industrials2 <- Par_fund_an_Industrials2[[11,i]]

New_Fund_An_Tab_Res12Industrials2 <- Par_fund_an_Industrials2[[12,i]]

New_Fund_An_Tab_Res13Industrials2 <- Par_fund_an_Industrials2[[13,i]]

New_Fund_An_Tab_Res14Industrials2 <-  Par_fund_an_Industrials2[[14,i]]

New_Fund_An_Tab_Res15Industrials2 <- Par_fund_an_Industrials2[[15,i]]


table.FundAnalysisDMY_Industrials2 <- matrix("", ncol = 2, nrow = 15)

colnames(table.FundAnalysisDMY_Industrials2) <- c("Parameter", "Value")

table.FundAnalysisDMY_Industrials2[1,1] <- "Market Capitalization"
table.FundAnalysisDMY_Industrials2[1,2] <- sprintf("%.8g",New_Fund_An_Tab_Res1Industrials2)


table.FundAnalysisDMY_Industrials2[2,1] <- "P/E Ratio"
table.FundAnalysisDMY_Industrials2[2,2] <- sprintf("%.2f",New_Fund_An_Tab_Res3Industrials2)


table.FundAnalysisDMY_Industrials2[3,1] <- "Earnings / Share"
table.FundAnalysisDMY_Industrials2[3,2] <- sprintf("%.2f",New_Fund_An_Tab_Res2Industrials2)


table.FundAnalysisDMY_Industrials2[4,1] <- "Price / Book"
table.FundAnalysisDMY_Industrials2[4,2] <- sprintf("%.2f",New_Fund_An_Tab_Res12Industrials2)


table.FundAnalysisDMY_Industrials2[5,1] <- "Book Value"
table.FundAnalysisDMY_Industrials2[5,2] <- sprintf("%.2f",New_Fund_An_Tab_Res4Industrials2)


table.FundAnalysisDMY_Industrials2[6,1] <- "EPS Forward"
table.FundAnalysisDMY_Industrials2[6,2] <- sprintf("%.2f",New_Fund_An_Tab_Res10Industrials2)


table.FundAnalysisDMY_Industrials2[7,1] <- "Price EPS Estimate Next Year"
table.FundAnalysisDMY_Industrials2[7,2] <- sprintf("%.2f",New_Fund_An_Tab_Res8Industrials2)


table.FundAnalysisDMY_Industrials2[8,1] <- "Dividend Yield"
table.FundAnalysisDMY_Industrials2[8,2] <- sprintf("%.6f",New_Fund_An_Tab_Res5Industrials2)


table.FundAnalysisDMY_Industrials2[9,1] <- "Dividend Pay Date"
table.FundAnalysisDMY_Industrials2[9,2] <- sprintf("%s",New_Fund_An_Tab_Res6Industrials2)

table.FundAnalysisDMY_Industrials2[10,1] <- "Dividend Ex-Date"
table.FundAnalysisDMY_Industrials2[10,2] <- sprintf("%s",New_Fund_An_Tab_Res13Industrials2)


table.FundAnalysisDMY_Industrials2[11,1] <- "Earnings Time Stamp"
table.FundAnalysisDMY_Industrials2[11,2] <- sprintf("%s",New_Fund_An_Tab_Res7Industrials2)

table.FundAnalysisDMY_Industrials2[12,1] <- "Earnings Start Time"
table.FundAnalysisDMY_Industrials2[12,2] <- sprintf("%s",New_Fund_An_Tab_Res9Industrials2)

table.FundAnalysisDMY_Industrials2[13,1] <- "Earnings End Time"
table.FundAnalysisDMY_Industrials2[13,2] <- sprintf("%s",New_Fund_An_Tab_Res11Industrials2)

table.FundAnalysisDMY_Industrials2[14,1] <- "Change From 50-day Moving Average"
table.FundAnalysisDMY_Industrials2[14,2] <- sprintf("%.2f",New_Fund_An_Tab_Res14Industrials2)

table.FundAnalysisDMY_Industrials2[15,1] <- "Change From 200-day Moving Average"
table.FundAnalysisDMY_Industrials2[15,2] <- sprintf("%.2f",New_Fund_An_Tab_Res15Industrials2)


tex.table.FundAnalysisDMY_Industrials2 <- xtable(table.FundAnalysisDMY_Industrials2)
caption(tex.table.FundAnalysisDMY_Industrials2) <- sprintf("Fundamental Analysis parameters for %s", listaIndustrials2[i])
print(tex.table.FundAnalysisDMY_Industrials2,
      include.rownames = FALSE,
      caption.placement = "top",
      table.placement = "ht")


}



@

\FloatBarrier

\clearpage


\thispagestyle{empty}

\end{document}